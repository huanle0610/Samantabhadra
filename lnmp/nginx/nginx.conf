
user amtf;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#include rtmp.conf;

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    upstream php_process {
        server unix:/run/php-fpm/php-fpm.sock;
    }

    server {
        listen       88;
        server_name  localhost;

	    client_max_body_size 500M;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root   /data/git/onlyoffice_php/;

        location / {
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_pass   unix:/run/php-fpm/php-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
           include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen 80;
        server_name my-test.demo.com;
        root /data/tmp;    
    }

    server {
        listen 80;
        server_name enjoy-web.demo.com;
        root   /data/projects/web/eapp;

        set $cgi_root   /var/project/webroot;

        index index.html index.htm index.php ;

        location ~* \.(css|js)(\?[0-9]+)?$ {
            proxy_pass http://localhost:1841; 
        }

        location ~* /~(sass|cmd)/ {
            proxy_pass http://localhost:1841; 
        }

        location / {
            try_files $uri $uri/ /index.php;
        }

        location ~ \.php$ {
                include        fastcgi_params;
                fastcgi_pass   php_process;  
                fastcgi_index  index.php;
                fastcgi_param  CI_ENV development;
                fastcgi_param  SCRIPT_FILENAME    $cgi_root/$fastcgi_script_name;
                fastcgi_read_timeout 600;
         }
    }

    server {
        listen 80;
        server_name doc.extjs6.com;
        root  /data/download/extjs6-doc;


        index index.html index.htm index.php ;
    }


    server {
        listen 80;
        server_name sencha.demo.com;
        root   /data/download/ext-6.2.0;


        index index.html index.htm index.php ;
    }

    server {
        listen 80;
        server_name mysql.amtf.com;
        root   /data/projects/web/phpMyAdmin-4.6.6;

        set $cgi_root   /data/projects/web/phpMyAdmin-4.6.6;

        index index.html index.htm index.php ;

        location / {
            try_files $uri $uri/ /index.php;
        }

        location ~ \.php$ {
                include        fastcgi_params;
                fastcgi_pass   php_process;  
                fastcgi_index  index.php;
                fastcgi_param  SCRIPT_FILENAME    $cgi_root/$fastcgi_script_name;
                fastcgi_read_timeout 600;
         }
    }
    
    server {
        listen       80;
        server_name  ee.amtf.com;
        set $root /data/projects/web/ee35;

        #access_log  logs/host.access.log  main;

        charset utf-8;

        location / {
            root  $root;
            index  index.php index.html index.htm;
            try_files $uri $uri/ /index.php;
        }

        # removes access to "system" folder, also allows a "System.php" controller
        if ($request_uri ~* ^/system)
        {
            rewrite ^/(.*)$ /index.php?/$1 last;
            break;
        }

        location ~ \.php$ {
           root           $root;
           fastcgi_pass   php_process;
           fastcgi_index  index.php;
           fastcgi_param  SCRIPT_FILENAME  $root$fastcgi_script_name;
           include        fastcgi_params;
        }
    }

    server {

        root /data/projects/web/php-ddd-cargo-sample-master/public; 
        index index.html index.htm index.php;

        server_name cargo.amtf.com;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ .*\.(php|phtml)?$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param APPLICATION_ENV development;
            fastcgi_pass php_process;
            fastcgi_index index.php;
        }

        location ~ .*\.(git|jpg|jpeg|png|bmp|swf|ico)?$ {
            expires 30d;
        }

        location ~ .*\.(js|css)?$ {
            expires 1h;
        }

        location ~ /\.ht {
            deny all;
        }
    }
    server {
        set $host_path "/data/projects/web/yiiDemo";
        #access_log  /www/mysite/log/access.log  main;

        server_name  yii2.amtf.com;
        root   $host_path/web;
        set $yii_bootstrap "index.php";

        charset utf-8;

        location / {
            index  index.html $yii_bootstrap;
            try_files $uri $uri/ /$yii_bootstrap?$args;
        }

        location ~ ^/(protected|framework|themes/\w+/views) {
            deny  all;
        }

        #avoid processing of calls to unexisting static files by yii
        location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
            try_files $uri =404;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php {
            fastcgi_split_path_info  ^(.+\.php)(.*)$;

            #let yii catch the calls to unexising PHP files
            set $fsn /$yii_bootstrap;
            if (-f $document_root$fastcgi_script_name){
                set $fsn $fastcgi_script_name;
            }

            fastcgi_pass php_process; 
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fsn;

            #PATH_INFO and PATH_TRANSLATED can be omitted, but RFC 3875 specifies them for CGI
            fastcgi_param  PATH_INFO        $fastcgi_path_info;
            fastcgi_param  PATH_TRANSLATED  $document_root$fsn;
        }

        # prevent nginx from serving dotfiles (.htaccess, .svn, .git, etc.)
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    server {
       charset utf-8;
       client_max_body_size 128M;
       sendfile off;

       listen 80; ## listen for ipv4
       #listen [::]:80 default_server ipv6only=on; ## listen for ipv6

       server_name y2.amtf.com;
       root        /run/media/amtf/software/e/git/yii-application/frontend/web/;
       index       index.php;

       access_log  /var/log/nginx/backend-access.log;
       error_log   /var/log/nginx/backend-error.log;

       location / {
           # Redirect everything that isn't a real file to index.php
           try_files $uri $uri/ /index.php$is_args$args;
       }

       # uncomment to avoid processing of calls to non-existing static files by Yii
       #location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
       #    try_files $uri =404;
       #}
       #error_page 404 /404.html;

       location ~ \.php$ {
           include fastcgi_params;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           #fastcgi_pass   127.0.0.1:9000;
           fastcgi_pass php_process;
           try_files $uri =404;
       }

       location ~ /\.(ht|svn|git) {
           deny all;
       }
    }
    include /home/amtf/Desktop/cxh-wss/ssl.conf;
}
